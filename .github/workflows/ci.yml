name: Build & Test & Analyze

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - name: Run Jest with coverage
        run: npm test -- --coverage --watchAll=false
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  e2e:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install & start app
        shell: bash
        run: |
          npm ci
          npm run dev &
          npx wait-on http://localhost:5173
        env:
          CI: true
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          record: false
      - name: Upload Cypress artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-junit
          path: cypress/results/*.xml
      - name: Generate Allure report
        shell: bash
        run: npx allure generate allure-results --clean -o allure-report
      - uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install deps & generate coverage
        run: |
          npm ci
          npm test -- --coverage --watchAll=false
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          organization: UniversidadSabana
          projectKey: UniversidadSabana_FrontProyecto
          projectBaseDir: .
          extraArgs: >
            Dsonar.sources=src
            Dsonar.tests=src/components/__tests__
            Dsonar.test.inclusions=src/components/__tests__/**/*.jsx
            Dsonar.exclusions=**/coverage/**,**/allure-report/**,**/cypress/fixtures/**,**/cypress/support/**
            Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            Dsonar.qualitygate.wait=true
            Dsonar.sourceEncoding=UTF-8
